{% include 'message-modal' %}{% include 'breadcrumb' %}
<style>
    #wrapped_text {
        width: 600px;
        height: 200px;
        overflow: hidden;
        position: relative;
    }

    .fade_text {
        bottom: 0;
    position: absolute;
    width: 600px;
    height: 95px;
    z-index: 9999;
        background: url({{ 'fade-text-light.png' | asset_url }}) transparent no-repeat;
    }

    span.show_text {
        font-size: 16px;
        overflow: hidden;
        text-decoration: underline;
        position: absolute;
        z-index: 10000;
        bottom: 0;
    }

    span.hide_text {
        font-size: 16px;
        overflow: hidden;
        text-decoration: underline;
        display: none;
        position: absolute;
        bottom: 0;
    }
</style>
<div class="product-detail container">
    <div itemscope itemtype="http://schema.org/Product" class="product">
        <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
        <meta itemprop="image" content="{{ product.featured_image.src | product_img_url: 'grande' }}">
        <div class="product-main">

            <div class="product-shop product-shop-sp">
                <div class="wrap-product-detail">
                    <header
                        class="product-title product-name {% if collection.previous_product or collection.next_product and settings.display_prev_next_product and collection %}has-btn{% endif %}">
                        <h2 itemprop="name">
                            {% if settings.enable_multilang %}
                            <span class="lang1">{{ product.title | split: '|' | first }}</span>
                            <span class="lang2">{{ product.title | split: '|' | last }}</span>
                            {% else %}
                            <span>{{ product.title | split: '|' | first }}</span>
                            {% endif %}
                        </h2>
                        {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', jm_style: 'text-align: center',
                        concierge_install: true, product: product %}

                    </header>
                    <div class="prices">
                        {% if product.compare_at_price > product.price %}
                        <span class="price on-sale" itemprop="price">{{ product.price | money }}</span>
                        <span class="compare-price">{{ product.compare_at_price_max | money }}</span>
                        {% else %}
                        <span class="price" itemprop="price">{{ product.price | money }}</span>
                        {% endif %}
                    </div>
                </div>

            </div>

            <div class="product-view {% if settings.product_image_border %} grid-item-bsorder {% endif %}">
                <div class="wrap-product-image">
                    <div id="product-image-preload">
                        <img src="{{ 'loading.gif' | asset_url }}">
                    </div>
                    {% if product.images.size == 0 %}
                    <div class="wrap-product-image-big product-photo-container" id="product-anchor">
                        <img src="{{ '' | product_img_url: 'grande' }}" alt="">
                    </div>
                    {% else %}
                    <div class="wrap-product-image-big product-photo-container" id="product-anchor">
                        {% assign featured_image = product.selected_or_first_available_variant.featured_image | default:
                        product.featured_image %}
                        <a href="{{ featured_image | img_url: 'original' }}">
                            <img id="product-featured-image" src="{{ featured_image | img_url: 'grande' }}"
                                alt="{{ featured_image.alt | escape }}"
                                data-zoom-image="{{ featured_image.src | img_url: 'original' }}" />
                        </a>
                    </div>
                    {% endif %}
                    <div id="more-view-carousel" class="wrap-product-image-list owl-carousel owl-theme">
                        {% for image in product.images %}
                        <div class="inner-image">
                            <a href="javascript:void(0)" data-image="{{ image.src | product_img_url: 'grande' }}"
                                data-zoom-image="{{ image.src | product_img_url: 'original' }}">
                                <img src="{{ image.src | product_img_url: 'compact' }}" alt="{{ image.alt | escape }}">
                            </a>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
            <div class="product-shop">
                <div class="wrap-product-detail">
                    <header
                        class="product-title product-name {% if collection.previous_product or collection.next_product and settings.display_prev_next_product and collection %}has-btn{% endif %}">
                        <h2 itemprop="name">
                            {% if settings.enable_multilang %}
                            <span class="lang1">{{ product.title | split: '|' | first }}</span>
                            <span class="lang2">{{ product.title | split: '|' | last }}</span>
                            {% else %}
                            <span>{{ product.title | split: '|' | first }}</span>
                            {% endif %}
                        </h2>
                        {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', jm_style: '',
                        concierge_install: true, product: product %}
                    </header>
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="priceCurrency" content="{{ shop.currency }}">
                        <link itemprop="availability"
                            href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">
                        <form action="/cart/add" method="post" enctype="multipart/form-data" id="add-to-cart-form">
                            <div class="prices">
                                {% if product.compare_at_price > product.price %}
                                <span class="price on-sale" itemprop="price">{{ product.price | money }}</span>
                                <span class="compare-price">{{ product.compare_at_price_max | money }}</span>
                                {% else %}
                                <span class="price" itemprop="price">{{ product.price | money }}</span>
                                {% endif %}
                            </div>
                            <div class="variants-products">
                                {% assign productstyle_index = -1 %}
                                {% for option in product.options %}
                                {% if option == "Style" %}
                                {% assign productstyle_index = forloop.index0 %}
                                {% endif %}
                                {% endfor %}
                                {% if productstyle_index >= 0 %}
                                <div class="title d-flex justify-content-between align-items-center">
                                    <h4 class="font-weight-lightbold text-capitalize">Products:</h4>
                                </div>
                                {% endif %}
                                {% if productstyle_index >= 0 %}
                                <div class="wrap-select-box">
                                    <select id="select-box-style">
                                        {% assign values = '' %}
                                        {% for variant in product.variants %}
                                        {% assign value = variant.options[productstyle_index] %}
                                        {% unless values contains value %}
                                        {% assign values = values | join: ',' %}
                                        {% assign values = values | append: ',' | append: value %}
                                        {% assign values = values | split: ',' %}
                                        <option data-id="{{ variant.id  }}" data-url="{{ variant.url }}" {% if
                                            forloop.first %} selected{% endif %} value="{{ variant.id }}"
                                            data-value="{{ value | handle }}">{{ value }}</option>
                                        {% endunless %}
                                        {% endfor %}
                                    </select>
                                </div>
                                <div class="wrap-rp-img-list">
                                    <div class="rp-img-list d-flex">
                                        {% assign variants_array='' %}
                                        {% for variant in product.variants %}
                                        {% assign value = variant.options[productstyle_index] %}
                                        {% unless variants_array contains value %}
                                        {% assign variants_array = variants_array | join: ',' %}
                                        {% assign variants_array = variants_array | append: ',' | append: value %}
                                        {% assign variants_array = variants_array | split: ',' %}
                                        <div class="inner-rp-img " data-filter="{{ value | handle }}"
                                            data-id="{{ variant.id }}">
                                            <a href="{{ variant.url }}" data-href="{{ variant.url }}">
                                                <img class="" src="{{ variant.image | img_url }}">
                                            </a>
                                        </div>
                                        {% endunless %}
                                        {% endfor %}
                                    </div>
                                </div>
                                {% endif %}
                            </div>
                            <div id="product-variants">
                                {% assign variantCount = product.variants | size %}
                                {% if product.available %}
                                {% if variantCount > 1 %}
                                <select id="product-selectors" name="id" style="display:none">
                                    {% for variant in product.variants %}
                                    <option {% if variant==product.selected_or_first_available_variant %}
                                        selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }}
                                        - {{ variant.price | money }}</option>
                                    {% endfor %}
                                </select>
                                {% if settings.use_color_swatch %}
                                {% for option in product.options %}
                                {% include 'swatch' with option %}
                                {% endfor %}
                                {% endif %}
                                {% else %}
                                <input type="hidden" name="id" value="{{ product.variants[0].id }}" />
                                {% endif %}
                                {% endif %}
                            </div>
                            {% include 'size-modal' %}
                            <div class="product-qty">
                                {% if product.available %}
                                <script>
                                    //Quantity click input
                                    $(document).ready(function () {
                                        var qty = $('.count');
                                        qty.prop('disabled', true);
                                        $('.minus').addClass('disable');
                                        function check() {
                                            if (qty.val() == 1) { $('.minus').addClass('disable'); }
                                        }
                                        $(document).on('click', '.plus', function () {
                                            qty.val(parseInt($('.count').val()) + 1);
                                            $('.minus').removeClass('disable');
                                        });
                                        $(document).on('click', '.minus', function () {
                                            qty.val(parseInt($('.count').val()) - 1);
                                            if (qty.val() == 0) {
                                                qty.val(1);
                                                $('.minus').addClass('disable');
                                            }
                                            check();
                                        });
                                    });
                                </script>
                                <div class="header"><span class="product-tlt">QTY</span></div>
                                <label for="quantity" {% if settings.enable_multilang
                                    %}data-translate="cart.label.quantity" {% endif %}>
                                    <span id="select-value" class="show-value">1 </span></label>
                                <div class="qty">
                                    <span class="minus">-</span>
                                    <input type="number" class="count" value="1" id="quantity-select" name="quantity"
                                        min="1" max="20">
                                    <span class="plus">+</span>
                                </div>
                                <input type="hidden" id="quantity" name="quantity" value="1">
                                <div class="buy-now">
                                    <input onclick="//pintrk('track', 'addtocart');" type="submit" name="add"
                                        class="btn" {% if settings.enable_multilang
                                        %}data-translate="products.product.add_to_cart" {% endif %}
                                        id="product-add-to-cart" value="{{ 'products.product.add_to_cart' | t }}">
                                </div>
                                {% else %}
                                <div class="buy-now">
                                    <input type="submit" name="add" class="btn" {% if settings.enable_multilang
                                        %}data-translate="products.product.unavailable" {% endif %}
                                        id="product-add-to-cart" disabled buy-now
                                        value="{{ 'products.product.unavailable' | t }}">
                                </div>
                                {% endif %}
                            </div>
                            {% capture the_snippet_fave %}{% render 'socialshopwave-widget-fave' %}{% endcapture %}
                            {% unless the_snippet_fave contains 'Liquid error' %}
                            {{ the_snippet_fave }}
                            {% endunless %}
                            <p class="checkout"><img src="{{ 'twippy_safe_checkout.png' | asset_url }}"></p>
                            <p class="twippy-report"><a href="#">Report this item to Twippy</a></p>
                        </form>
                    </div>
                    <div>
                        <div id="pxu_cst"></div>
                    </div>
                    <div id="product-detail" class="product-area">
                        {{ product.description }}
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="product-review">
        {% render 'judgeme_widgets', widget_type: 'judgeme_review_widget', concierge_install: false, product: product %}
    </div>
    {%if collection %}
    <div class="relate-product">
        <p class="idx-tlt">
            WE THINK YOU'LL LOVE THESE TOO
        </p>
        <ul class="product-list">
            {%assign count = 0 %}
            {% for product in collection.products%}
            {%if count < 4%} {%assign count=count | plus: 1 %} <li>
                <a href="{{ product.url}}" title="{{product.title}}">
                    {%- if settings.sale_symbal -%}
                    <span class="sale"
                        style="background:url('{{ settings.sale_symbal | img_url: 'master' }}') center / contain no-repeat;">{{settings.sale_title}}<span>{{settings.sale_content}}</span></span>
                    {%- endif -%}
                    <p class="product-img">
                        <img src="{{ product.featured_image.src | product_img_url: 'large' }}"
                            alt="{{ product.featured_image.alt | escape }}" />
                    </p>
                    <p class="product-tlt">
                        {{ product.title | truncate: 50}}
                    </p>
                    <p class="product-price">
                        {{ product.price | money_without_trailing_zeros }}
                        <span>
                            {{ product.price | money_without_trailing_zeros }}
                        </span>
                    </p>
                </a>
                </li>
                {%endif%}
                {%endfor%}
        </ul>
    </div>
    {%endif%}
    <div class="more-product">
        <p class="idx-tlt">
            MORE COOL PRODUCTS
        </p>
        <div class="more-product-scroll">
            <ul class="more-product-list">
                {% for i in (1..7) %}
                {% capture collection %}related_collection_{{ i }}{% endcapture %}
                {% capture background %}related_collection_{{ i }}_background{% endcapture %}
                {% if settings[collection] %}
                <li>
                    <a href="{{ collections[settings[collection]].title }}">
                        <p class="more-product-img" style="background-image:url('{{ settings[background] | img_url }}');background-size: cover;    background-repeat: no-repeat;
                    background-position: center;">
                        </p>
                        <p class="more-product-tlt">
                            {{ collections[settings[collection]].title }}
                        </p>
                    </a>
                </li>
                {%endif%}

                {% endfor %}
            </ul>
        </div>
    </div>
    {{ 'option_selection.js' | shopify_asset_url | script_tag }}
</div>


<script>
    //Shopify.Image.preload({{ product.images | json }}, 'grande');

    {% if settings.display_subtotal and product.available %}
    //update price when changing quantity
    function updatePricing() {
        //try pattern one before pattern 2
        var regex = /([0-9]+[.|,][0-9]+[.|,][0-9]+)/g;
        var unitPriceTextMatch = jQuery('.product .price').text().match(regex);

        if (!unitPriceTextMatch) {
            regex = /([0-9]+[.|,][0-9]+)/g;
            unitPriceTextMatch = jQuery('.product .price').text().match(regex);
        }

        if (unitPriceTextMatch) {
            var unitPriceText = unitPriceTextMatch[0];
            var unitPrice = unitPriceText.replace(/[.|,]/g, '');
            var quantity = parseInt(jQuery('#quantity').val());
            var totalPrice = unitPrice * quantity;

            var totalPriceText = Shopify.formatMoney(totalPrice, window.money_format);
            regex = /([0-9]+[.|,][0-9]+[.|,][0-9]+)/g;
            if (!totalPriceText.match(regex)) {
                regex = /([0-9]+[.|,][0-9]+)/g;
            }
            totalPriceText = totalPriceText.match(regex)[0];

            var regInput = new RegExp(unitPriceText, "g");
            var totalPriceHtml = jQuery('.product .price').html().replace(regInput, totalPriceText);

            jQuery('.product .total-price span').html(totalPriceHtml);
        }
    }

    jQuery('#quantity').on('change', updatePricing);
    {% endif %}

    var selectCallback = function (variant, selector) {

        var addToCart = jQuery('#product-add-to-cart'),
            productPrice = jQuery('.product .price'),
            comparePrice = jQuery('.product .compare-price');

        if (variant) {
            if (variant.available) {

                // Anchor when click on color
                $('.product-color .swatch-content label').on('click', function () {
                    $('html,body').stop().animate({ scrollTop: $('#product-anchor').offset().top }, 'slow');
                });

                // We have a valid product variant, so enable the submit button
                addToCart.removeClass('disabled').removeAttr('disabled').val(window.inventory_text.add_to_cart);

            } else {
                // Variant is sold out, disable the submit button
                addToCart.val(window.inventory_text.sold_out).addClass('disabled').attr('disabled', 'disabled');
            }

            // Regardless of stock, update the product price
            productPrice.html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}"));

            // Also update and show the product's compare price if necessary
            if (variant.compare_at_price > variant.price) {
                productPrice.addClass("on-sale")
                comparePrice
                    .html(Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}"))
                    .show();
            } else {
                comparePrice.hide();
                productPrice.removeClass("on-sale");
            }
            {% if settings.use_color_swatch %}
            // BEGIN SWATCHES
            var form = jQuery('#' + selector.domIdPrefix).closest('form');
            for (var i = 0, length = variant.options.length; i < length; i++) {
                var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] + '"]');
                if (radioButton.size()) {
                    radioButton.get(0).checked = true;
                }
            }
            // END SWATCHES
            {% endif %}

            {% if settings.display_subtotal and product.available %}
            updatePricing();
            {% endif %}

            {% if settings.enable_multiple_currencies %}
            Currency.convertAll('{{ shop.currency }}', jQuery('#currencies').val(), 'span.money', 'money_format');
            {% endif %}

        } else {
            // The variant doesn't exist. Just a safeguard for errors, but disable the submit button anyway
            addToCart.val(window.inventory_text.unavailable).addClass('disabled').attr('disabled', 'disabled');
        }

        //update variant inventory
        {% if settings.display_availability %}
        if (variant.available) {
            if (variant.inventory_management != null) {
                jQuery(".product-inventory span").text(variant.inventory_quantity + " " + window.inventory_text.in_stock);
            } else {
                jQuery(".product-inventory span").text(window.inventory_text.many_in_stock);
            }
        } else {
            jQuery(".product-inventory span").text(window.inventory_text.out_of_stock);
        }
        {% endif %}

        /*begin variant image*/
        if (variant && variant.featured_image) {
            var originalImage = jQuery("#product-featured-image");
            var newImage = variant.featured_image;
            var element = originalImage[0];
            Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
                jQuery('#more-view-carousel img').each(function () {
                    var grandSize = jQuery(this).attr('src');
                    grandSize = grandSize.replace('compact', 'grande');
                    if (grandSize == newImageSizedSrc) {
                        jQuery(this).parent().trigger('click');
                        return false;
                    }
                });
            });
        }
        /*end of variant image*/
    };

    jQuery(function ($) {
        {% if product.available and product.variants.size > 1 %}
        new Shopify.OptionSelectors('product-selectors', {
            product: {{ product | json }},
        onVariantSelected: selectCallback,
        enableHistoryState: true
        });

    {% comment %}
    Use
    color
    swatch
    and
    linked
    options(copyright
        by
    @carolineschnapp)
    {% endcomment %}
    {% if settings.use_color_swatch and product.available and product.options.size > 1 %}
    Shopify.linkOptionSelectors({{ product | json }});
    {% endif %}

    {% if settings.use_color_swatch != true %}
    jQuery('.single-option-selector').selectize();
    jQuery('.selectize-input input').attr("disabled", "disabled");
    {% endif %}

    {% endif %}

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
    $('.selector-wrapper').hide();
    {% endif %}

    // Auto-select first available variant on page load. Otherwise the product looks sold out.
    {% assign found_one_in_stock = false %}
    {% for variant in product.variants %}
    {% if variant.available and found_one_in_stock == false %}
    {% assign found_one_in_stock = true %}
    {% for option in product.options %}
    $('.single-option-selector:eq({{ forloop.index0 }})').val({{ variant.options[forloop.index0] | json }}).trigger('change');
    {% endfor %}
    {% endif %}
    {% endfor %}

    {% if settings.display_product_reviews %}
    var reviewsTimeout = setInterval(function () {
        if (jQuery(".spr-badge-caption").length > 0) {
            jQuery(".spr-badge-caption").on('click', function () {
                jQuery('html,body').animate({
                    scrollTop: jQuery(".panel:last").offset().top
                },
                    '400');
                jQuery("#collapse-tab4").collapse('show');
            });
            clearInterval(reviewsTimeout);
        }
    }, 1000);

    {% endif %}

    });
</script>
<script text="text/javascript">
    var _learnq = _learnq || [];

    var item = {
        Name: {{ product.title| json }},
    ProductID: { { product.id | json } },
    Categories: { { product.collections | map: 'title' | json } },
    ImageURL: "https:{{ product.featured_image.src|img_url:'grande' }}",
        URL: "{{ shop.secure_url }}{{ product.url }}",
            Brand: { { product.vendor | json } },
    Price: { { product.price | money | json } },
    CompareAtPrice: { { product.compare_at_price_max | money | json } }
  };

    _learnq.push(['track', 'Viewed Product', item]);
    _learnq.push(['trackViewedItem', {
        Title: item.Name,
        ItemId: item.ProductID,
        Categories: item.Categories,
        ImageUrl: item.ImageURL,
        Url: item.URL,
        Metadata: {
            Brand: item.Brand,
            Price: item.Price,
            CompareAtPrice: item.CompareAtPrice
        }
    }]);
</script>

<script>
    function createDescriptionTab() {
        // description apend data
        // create tab
        let tabbedPanel = '';
        tabbedPanel += "<ul class='product-menu'><li class='activated' data-tab='1'>DESCRIPTION</li>";

        let tab_counter = 2
        $.each($('.product-area h3.heading'), function (key, val) {
            if (!$(val).text()) { return; }
            tabbedPanel += "<li data-tab=" + tab_counter + ">" + $(val).text() + "</li>";
            tab_counter += 1;
        });
        tabbedPanel += "</ul>";

        // original description
        let des_rex = /^(.+)<\/h3>/;
        let arrTabText = $('.product-area').html().split('<h3 class="heading">');
        let textFirstTab = arrTabText[0];
        let productDescriptionTabbed = "";
        let arrTabIds = [];

        // split html and save into tab
        let counter = 2;
        $.each(arrTabText, function (key, val) {
            let rex_result = val.trim().match(des_rex);
            if (!rex_result || !rex_result[1]) { return; }
            if (rex_result) {
                let valTab = val.replace(rex_result[0], '');
                let tabTitle = rex_result[1].trim().replace(/[^a-zA-Z]/g, "").replace('nbsp', '');
                arrTabIds.push('#' + tabTitle);
                productDescriptionTabbed += "<div data-tab=" + counter + ">" + valTab + "</div></div>";
                counter += 1;
            }
        });

        // remainder put back to description
        productDescriptionTabbed = "<div class='wrap-product-info'><div class='product-description activated' data-tab='1' id='wrapped_text'>"
            + textFirstTab + "<div class='fade_text'></div><span class='show_text'>Show More</span><span class='hide_text'>Hide This</span></div>" + productDescriptionTabbed + "</div>";
        if (productDescriptionTabbed.length > 0) {
            $('h2.description').hide();
            $('#product-detail').html(tabbedPanel + productDescriptionTabbed);
        }

        //Remove tab with empty content: empty htm; with length is 5, so if the text length < 6, we will remove it
        arrTabIds.forEach(function (section) {
            if ($(section).text().length < 6) {
                $(section).remove();
                $("a[href='" + section + "']").remove();
            }
        })
    }
    $(document).ready(function () {
        createDescriptionTab();
        // Button click change content Product Description
        var des_btn = $('.product-menu li'),
            des_data = $('.wrap-product-info>div');
        $('.product-menu li').on('click', function () {
            let data = $(this).attr('data-tab');
            if ($(this).hasClass('activated')) {
                return false;
            } else {
                $.merge(des_btn, des_data).removeClass('activated');
                $(this).addClass('activated');
                $('.wrap-product-info').find('div[data-tab=' + data + ']').addClass('activated');
            }
            if ($(this).text() == 'DESCRIPTION') {
                $("div#wrapped_text").css({ 'height': '200px' });
            }
            else {
                $("div#wrapped_text").css({ 'height': '0px' });
            }
        });
        $("span.show_text").click(function () {
            $(this).hide();
            $("span.hide_text").show();
            $("div.fade_text").hide();
            $("div#wrapped_text").css("height", "auto");
        });
        $("span.hide_text").click(function () {
            $(this).hide();
            $("span.show_text").show();
            $("div.fade_text").show();
            $("div#wrapped_text").css("height", "200px");
        });
    })
</script>